'use client';

import { useState, useEffect } from 'react';

export default function Header() {
  const [description, setDescription] = useState('–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º');
  const [isEditing, setIsEditing] = useState(false);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ localStorage
  useEffect(() => {
    const savedDescription = localStorage.getItem('miracle-field-description');
    if (savedDescription) {
      setDescription(savedDescription);
    }
  }, []);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  const handleSave = (newDescription: string) => {
    setDescription(newDescription);
    localStorage.setItem('miracle-field-description', newDescription);
    setIsEditing(false);
  };

  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === 'Enter') {
      handleSave(e.currentTarget.value);
    } else if (e.key === 'Escape') {
      setIsEditing(false);
    }
  };

  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {
    handleSave(e.currentTarget.value);
  };

  return (
    <header className="header">
      <div className="container">
        <div className="header-content">
          <h1>üé° –ü–æ–ª–µ –ß—É–¥–µ—Å</h1>
          {isEditing ? (
            <input
              type="text"
              className="header-description-input"
              defaultValue={description}
              onKeyDown={handleKeyDown}
              onBlur={handleBlur}
              autoFocus
              placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ..."
            />
          ) : (
            <p 
              className="header-description"
              onClick={() => setIsEditing(true)}
              title="–ù–∞–∂–º–∏—Ç–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
            >
              {description}
            </p>
          )}
        </div>
      </div>
    </header>
  );
}
